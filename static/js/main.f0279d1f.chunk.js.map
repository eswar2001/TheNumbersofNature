{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["fib","num","arr","i","push","add","toString","str1","str2","sum","str1Length","length","temp","digitSum","carry","parseInt","charAt","substr","App","useState","setNum","ans","setAns","isCalc","setIsCalc","useEffect","console","log","className","style","width","onClick","e","preventDefault","type","value","onChange","target","id","placeholder","name","min","match","val","window","prompt","alert","location","reload","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAqEA,IAAMA,EAAM,SAACC,GAEX,IADA,IAAIC,EAAM,CAAC,CAAC,GAAI,CAAC,IACRC,EAAI,EAAGA,GAAKF,EAAKE,IACxBD,EAAIE,KAAKC,EAAIH,EAAIC,EAAI,GAAGG,WAAYJ,EAAIC,EAAI,GAAGG,aAEjD,OAAOJ,EAAID,IAGPI,EAAM,SAACE,EAAMC,GACjB,IAAIC,EAAM,GACNC,EAAaH,EAAKI,OAGtB,GAFiBH,EAAKG,OAELD,EAAY,CAC3B,IAAIE,EAAOJ,EACXA,EAAOD,EACPA,EAAOK,EAQT,IALA,IAGIA,EACAC,EAJAC,EAAQ,EAKHX,EAAI,EAAGA,EAAII,EAAKI,OAAQR,IAK/BU,GADAD,GAAQE,EAHJC,SAASR,EAAKS,OAAOT,EAAKI,OAAS,EAAIR,KACvCY,SAASP,EAAKQ,OAAOR,EAAKG,OAAS,EAAIR,KAC/B,IACWG,YACPU,OAAOJ,EAAKD,OAAS,GAErCG,GADAA,EAAQC,SAASH,EAAKK,OAAO,EAAGL,EAAKD,OAAS,MACtB,EACxBF,EAAMN,IAAMI,EAAKI,OAAS,EAAIC,EAAOH,EAAMI,EAAWJ,EAGxD,OAAOA,GAGMS,EAzGf,WACE,MAAsBC,mBAAS,GAA/B,mBAAOlB,EAAP,KAAYmB,EAAZ,KACA,EAAsBD,mBAAS,IAA/B,mBAAOE,EAAP,KAAYC,EAAZ,KACA,EAA4BH,oBAAS,GAArC,mBAAOI,EAAP,KAAeC,EAAf,KAIA,OAHAC,qBAAU,WACRC,QAAQC,IAAIN,KACX,CAACA,IACAE,EAEA,mCACE,yBAASK,UAAU,WAAnB,SACE,sBAAKA,UAAU,UAAf,UACE,oDACA,uDACA,uBAAM,uBAAM,uBAAM,uBAClB,0BAAUC,MAAO,CACfC,MAAO,QADT,SAEIT,IACJ,+BACE,uBAAOU,QAAS,SAACC,GACfR,GAAU,GACVF,EAAO,IACPU,EAAEC,kBACDC,KAAK,SAASC,MAAM,mBAQ/B,mCACE,yBAASP,UAAU,WAAnB,SACE,sBAAKA,UAAU,UAAf,UACE,oDACA,uDACA,uBAAM,uBAAM,uBAAM,uBAClB,iCACE,uBAAOQ,SAAU,SAACJ,GAChBZ,EAAOY,EAAEK,OAAOF,OAChBT,QAAQC,IAAI1B,GACZ+B,EAAEC,kBACDC,KAAK,SAASI,GAAG,UAAUC,YAAY,qBAAqBC,KAAK,UAAUC,IAAI,MAClF,uBAAOV,QAAS,SAACC,GACf,GAAI/B,EAAIyC,MAAM,eAAgB,CAC5B,GAAIzC,EAAM,IAAO,CACf,IAAI0C,EAAMC,OAAOC,OAAO,yEAAd,UAA2F5C,IACrGmB,EAAOuB,GAETrB,EAAOtB,EAAIC,IACXuB,GAAU,GACVE,QAAQC,IAAIN,QAEZyB,MAAM,0BACNF,OAAOG,SAASC,SAElBhB,EAAEC,kBACDC,KAAK,SAASC,MAAM,sBC/CtBc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.f0279d1f.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nfunction App() {\n  const [num, setNum] = useState(0);\n  const [ans, setAns] = useState('');\n  const [isCalc, setIsCalc] = useState(false);\n  useEffect(() => {\n    console.log(ans);\n  }, [ans])\n  if (isCalc) {\n    return (\n      <>\n        <section className=\"showcase\">\n          <div className=\"content\">\n            <h1>Fibonacci Sequence</h1>\n            <h3>The Numbers of Nature</h3>\n            <br /><br /><br /><br />\n            <textarea style={{\n              width: '50vw'\n            }}>{ans}</textarea>\n            <form>\n              <input onClick={(e) => {\n                setIsCalc(false);\n                setAns('');\n                e.preventDefault();\n              }} type=\"submit\" value=\"Reset\" />\n            </form>\n          </div>\n        </section>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <section className=\"showcase\">\n          <div className=\"content\">\n            <h1>Fibonacci Sequence</h1>\n            <h3>The Numbers of Nature</h3>\n            <br /><br /><br /><br />\n            <form>\n              <input onChange={(e) => {\n                setNum(e.target.value);\n                console.log(num);\n                e.preventDefault();\n              }} type=\"number\" id=\"nthterm\" placeholder=\"Enter the nth Term\" name=\"nthterm\" min=\"0\" />\n              <input onClick={(e) => {\n                if (num.match(/^[1-9]\\d*$/g)) {\n                  if (num > 40000) {\n                    var val = window.prompt(\"Are you sure about the input ? I don't expect your system to handle...\", `${num}`);\n                    setNum(val);\n                  }\n                  setAns(fib(num));\n                  setIsCalc(true);\n                  console.log(ans);\n                } else {\n                  alert('Enter only +ve numbers');\n                  window.location.reload();\n                }\n                e.preventDefault();\n              }} type=\"submit\" value=\"Submit\" />\n            </form>\n          </div>\n        </section>\n      </>\n    );\n  }\n}\n\n\nconst fib = (num) => {\n  var arr = [[0], [1]];\n  for (var i = 2; i <= num; i++) {\n    arr.push(add(arr[i - 1].toString(), arr[i - 2].toString()));\n  }\n  return arr[num];\n}\n\nconst add = (str1, str2) => {\n  let sum = \"\";\n  let str1Length = str1.length;\n  let str2Length = str2.length;\n\n  if (str2Length > str1Length) {\n    let temp = str2;\n    str2 = str1;\n    str1 = temp;\n  }\n\n  let carry = 0;\n  let a;\n  let b;\n  let temp;\n  let digitSum;\n  for (let i = 0; i < str1.length; i++) {\n    a = parseInt(str1.charAt(str1.length - 1 - i));\n    b = parseInt(str2.charAt(str2.length - 1 - i));\n    b = b ? b : 0;\n    temp = (carry + a + b).toString();\n    digitSum = temp.charAt(temp.length - 1);\n    carry = parseInt(temp.substr(0, temp.length - 1));\n    carry = carry ? carry : 0;\n    sum = i === str1.length - 1 ? temp + sum : digitSum + sum;\n  }\n\n  return sum;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}